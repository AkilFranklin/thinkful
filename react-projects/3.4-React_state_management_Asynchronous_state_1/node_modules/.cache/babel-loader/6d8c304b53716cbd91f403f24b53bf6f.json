{"ast":null,"code":"var _jsxFileName = \"/Users/akilf/indeed/Thinkful/react-projects/React_state_management_Asynchronous_state_1/src/IncrementButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IncrementButtons() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [lastPressed, setLastPressed] = useState(null);\n  const handleClick = label => {\n    setLastPressed(label);\n    if (lastPressed === \"One\") {\n      setCount(count => count + 1);\n      setCount(count => count + 1);\n    } else if (lastPressed === \"Two\") {\n      setCount(count => count + 2);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Last Pressed: \", lastPressed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(\"One\"),\n      children: \"One\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(\"Two\"),\n      children: \"Two\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(IncrementButtons, \"qkzhhNpORR7MgoaJe0OqD/P6v+Q=\");\n_c = IncrementButtons;\nexport default IncrementButtons;\nvar _c;\n$RefreshReg$(_c, \"IncrementButtons\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","IncrementButtons","_s","count","setCount","lastPressed","setLastPressed","handleClick","label","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/akilf/indeed/Thinkful/react-projects/React_state_management_Asynchronous_state_1/src/IncrementButtons.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction IncrementButtons() {\n  const [count, setCount] = useState(0);\n  const [lastPressed, setLastPressed] = useState(null);\n  const handleClick = (label) => {\n    setLastPressed(label);\n    if (lastPressed === \"One\") {\n      setCount((count) => count + 1);\n      setCount((count) => count + 1);\n    } else if (lastPressed === \"Two\") {\n      setCount((count) => count + 2);\n    }\n  };\n  return (\n    <div>\n      <h3>Last Pressed: {lastPressed}</h3>\n      <h4>Count: {count}</h4>\n      <button onClick={() => handleClick(\"One\")}>One</button>\n      <button onClick={() => handleClick(\"Two\")}>Two</button>\n    </div>\n  );\n}\n\nexport default IncrementButtons;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMS,WAAW,GAAIC,KAAK,IAAK;IAC7BF,cAAc,CAACE,KAAK,CAAC;IACrB,IAAIH,WAAW,KAAK,KAAK,EAAE;MACzBD,QAAQ,CAAED,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC;MAC9BC,QAAQ,CAAED,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC;IAChC,CAAC,MAAM,IAAIE,WAAW,KAAK,KAAK,EAAE;MAChCD,QAAQ,CAAED,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC;IAChC;EACF,CAAC;EACD,oBACEH,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,GAAI,gBAAc,EAACJ,WAAW;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCb,OAAA;MAAAS,QAAA,GAAI,SAAO,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMP,WAAW,CAAC,KAAK,CAAE;MAAAE,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvDb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMP,WAAW,CAAC,KAAK,CAAE;MAAAE,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACX,EAAA,CApBQD,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAsBzB,eAAeA,gBAAgB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}