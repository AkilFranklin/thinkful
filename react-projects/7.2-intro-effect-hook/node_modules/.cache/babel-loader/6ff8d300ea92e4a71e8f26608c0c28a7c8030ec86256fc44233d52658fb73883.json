{"ast":null,"code":"var _jsxFileName = \"/Users/akilf/indeed/thinkful/react-projects/7.2-intro-effect-hook/src/ProfileEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileEdit() {\n  _s();\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users/1\").then(response => response.json()).then(setUser);\n  }, []);\n\n  // useEffect(() => {\n  //   async function loadUsers() {\n  //     const response = await fetch(\n  //       \"https://jsonplaceholder.typicode.com/users/1\"\n  //     );\n  //     const userFromAPI = await response.json();\n  //     setUser(userFromAPI);\n  //   }\n  //   loadUsers();\n  // }, []); // Passing [] so that it only runs the effect once\n\n  if (user.id) {\n    // `user.id` is truthy after the API call returns\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"profileEdit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"User Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          name: \"username\",\n          type: \"text\",\n          value: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email\",\n          type: \"email\",\n          value: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  return \"Loading...\";\n}\n_s(ProfileEdit, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n_c = ProfileEdit;\nexport default ProfileEdit;\nvar _c;\n$RefreshReg$(_c, \"ProfileEdit\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProfileEdit","_s","user","setUser","fetch","then","response","json","id","name","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","username","email","_c","$RefreshReg$"],"sources":["/Users/akilf/indeed/thinkful/react-projects/7.2-intro-effect-hook/src/ProfileEdit.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction ProfileEdit() {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users/1\")\n      .then((response) => response.json())\n      .then(setUser);\n  }, []);\n\n  // useEffect(() => {\n  //   async function loadUsers() {\n  //     const response = await fetch(\n  //       \"https://jsonplaceholder.typicode.com/users/1\"\n  //     );\n  //     const userFromAPI = await response.json();\n  //     setUser(userFromAPI);\n  //   }\n  //   loadUsers();\n  // }, []); // Passing [] so that it only runs the effect once\n\n  if (user.id) {\n    // `user.id` is truthy after the API call returns\n    return (\n      <form name=\"profileEdit\">\n        <div>\n          <label htmlFor=\"username\">User Name:</label>\n          <input\n            id=\"username\"\n            name=\"username\"\n            type=\"text\"\n            value={user.username}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input id=\"email\" name=\"email\" type=\"email\" value={user.email} />\n        </div>\n      </form>\n    );\n  }\n  return \"Loading...\";\n}\n\nexport default ProfileEdit;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,8CAA8C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAACF,OAAO,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAID,IAAI,CAACM,EAAE,EAAE;IACX;IACA,oBACET,OAAA;MAAMU,IAAI,EAAC,aAAa;MAAAC,QAAA,gBACtBX,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAOY,OAAO,EAAC,UAAU;UAAAD,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5ChB,OAAA;UACES,EAAE,EAAC,UAAU;UACbC,IAAI,EAAC,UAAU;UACfO,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEf,IAAI,CAACgB;QAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAOY,OAAO,EAAC,OAAO;UAAAD,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrChB,OAAA;UAAOS,EAAE,EAAC,OAAO;UAACC,IAAI,EAAC,OAAO;UAACO,IAAI,EAAC,OAAO;UAACC,KAAK,EAAEf,IAAI,CAACiB;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEX;EACA,OAAO,YAAY;AACrB;AAACd,EAAA,CAzCQD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}