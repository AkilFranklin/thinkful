{"ast":null,"code":"var _jsxFileName = \"/Users/akilf/indeed/thinkful/react-projects/4.10-React_state_management_Assessment_1/src/PostCreate.js\";\nimport React, { useState } from \"react\";\n\n/**\n * Displays the form to create a new post, which can be either an image or a text post.\n *\n * When the form is submitted, a new post is created and the form contents cleared.\n */\nfunction PostCreate({\n  createPost\n}) {\n  const initialFormState = {\n    type: \"Text\",\n    content: \"\"\n  };\n  const [formData, setFormData] = useState({\n    ...initialFormState\n  });\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    createPost(formData);\n    setFormData({\n      ...initialFormState\n    });\n  };\n\n  // TODO: When the form is submitted, a new post should be created, and the form contents cleared.\n\n  // For the tests to pass, the form below must have:\n  // - a `name=\"create\"` attribute\n  // - one child `<button>` with a `type=\"submit\"` attribute\n  // - one child `<select>` with a `name=\"type\"` attribute\n  // - one child `<textarea>` or `<input>` (not both at the same time) with a `name=\"content\"`\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    name: \"create\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Type: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"type\",\n    name: \"type\",\n    required: true,\n    onChange: handleChange,\n    value: formData.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Image\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Content: \"), formData.type === \"Text\" ? /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"content\",\n    name: \"content\",\n    required: true,\n    rows: 3,\n    onChange: handleChange,\n    value: formData.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    id: \"content\",\n    name: \"content\",\n    type: \"url\",\n    required: true,\n    onChange: handleChange,\n    value: formData.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\nexport default PostCreate;","map":{"version":3,"names":["React","useState","PostCreate","createPost","initialFormState","type","content","formData","setFormData","handleChange","target","name","value","handleSubmit","event","preventDefault","createElement","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","required","onChange","rows"],"sources":["/Users/akilf/indeed/thinkful/react-projects/4.10-React_state_management_Assessment_1/src/PostCreate.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n/**\n * Displays the form to create a new post, which can be either an image or a text post.\n *\n * When the form is submitted, a new post is created and the form contents cleared.\n */\nfunction PostCreate({ createPost }) {\n  const initialFormState = {\n    type: \"Text\",\n    content: \"\",\n  }\n  const [formData, setFormData] = useState({...initialFormState});\n  const handleChange = ({ target }) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value\n    })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createPost(formData);\n    setFormData({...initialFormState})\n  }\n\n\n  // TODO: When the form is submitted, a new post should be created, and the form contents cleared.\n\n  // For the tests to pass, the form below must have:\n  // - a `name=\"create\"` attribute\n  // - one child `<button>` with a `type=\"submit\"` attribute\n  // - one child `<select>` with a `name=\"type\"` attribute\n  // - one child `<textarea>` or `<input>` (not both at the same time) with a `name=\"content\"`\n\n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <fieldset>\n        <legend>Create</legend>\n        <div>\n          <label htmlFor=\"type\">Type: </label>\n          <select id=\"type\" name=\"type\" required={true} onChange={handleChange} value={formData.type}>\n            <option value=\"Text\">Text</option>\n            <option value=\"Image\">Image</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"content\">Content: </label>\n          {formData.type === \"Text\" ? (\n            <textarea id=\"content\" name=\"content\" required={true} rows={3} onChange={handleChange} value={formData.content}/>\n          ) : (\n            <input id=\"content\" name=\"content\" type=\"url\" required={true} onChange={handleChange} value={formData.content}/>\n          )}\n        </div>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </fieldset>\n    </form>\n  );\n}\n\nexport default PostCreate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}