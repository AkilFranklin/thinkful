{"ast":null,"code":"var _jsxFileName = \"/Users/akilf/indeed/thinkful/react-projects/3.5-intro-jsx/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toDos, setToDos] = useState([]);\n\n  // Load data from https://jsonplaceholder.typicode.com/todos?userId=2\n  useEffect(() => {\n    async function loadTodos() {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/todos?userId=2\");\n      const todoFromAPI = await response.json();\n      setToDos(todoFromAPI);\n    }\n    loadTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: toDos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: todo.completed ? \"line-through\" : \"\"\n        },\n        children: todo.title\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cu6vEOvoZIH2v+mWoEemFkjXxkc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","toDos","setToDos","loadTodos","response","fetch","todoFromAPI","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","style","textDecoration","completed","title","id","_c","$RefreshReg$"],"sources":["/Users/akilf/indeed/thinkful/react-projects/3.5-intro-jsx/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [toDos, setToDos] = useState([]);\n\n  // Load data from https://jsonplaceholder.typicode.com/todos?userId=2\n  useEffect(() => {\n    async function loadTodos() {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/todos?userId=2\"\n      );\n      const todoFromAPI = await response.json();\n      setToDos(todoFromAPI);\n    }\n    loadTodos();\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <h1>To Do List</h1>\n      <ul className=\"todo-list\">\n        {toDos.map((todo) => (\n          <li\n            key={todo.id}\n            style={{\n              textDecoration: todo.completed ? \"line-through\" : \"\",\n            }}\n          >\n            {todo.title}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACd,eAAeQ,SAASA,CAAA,EAAG;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qDACF,CAAC;MACD,MAAMC,WAAW,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACzCL,QAAQ,CAACI,WAAW,CAAC;IACvB;IACAH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEL,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBX,OAAA;MAAAW,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBf,OAAA;MAAIU,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBR,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACdjB,OAAA;QAEEkB,KAAK,EAAE;UACLC,cAAc,EAAEF,IAAI,CAACG,SAAS,GAAG,cAAc,GAAG;QACpD,CAAE;QAAAT,QAAA,EAEDM,IAAI,CAACI;MAAK,GALNJ,IAAI,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACb,EAAA,CAjCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}